

.sprite_insta_icon {
    display: inline-block;
    background: url('../imgs/background01.png') no-repeat -53px -235px;
    width: 22px;
    height: 22px;
}

.sprite_write_logo {
    display: inline-block;
    background: url('../imgs/background01.png') no-repeat -94px -72px;
    width: 103px;
    height: 29px;
}

.sprite_compass_icon {
    display: inline-block;
    background: url('../imgs/background01.png') no-repeat -130px -286px;
    width: 23px;
    height: 23px;
}

.sprite_user_icon_outline {
    display: inline-block;
    background: url('../imgs/background01.png') no-repeat -272px -182px;
    width: 22px;
    height: 24px;
}

.sprite_heart_icon_outline {
    display: inline-block;
    background: url('../imgs/background01.png') no-repeat -52px -261px;
    width: 24px;
    height: 22px;
}

.sprite_small_search_icon {
    display: inline-block;
    background: url('../imgs/background01.png') no-repeat -337px -246px;
    width: 10px;
    height: 10px;
}

.sprite_more_icon {
    display: inline-block;
    background: url('../imgs/background01.png') no-repeat -301px -218px;
    width: 15px;
    height: 3px;
}

.sprite_bubble_icon {
    display: inline-block;
    background: url('../imgs/background01.png') no-repeat -239px -202px;
    width: 24px;
    height: 24px;
}

.sprite_share_icon {
    display: inline-block;
    background: url('../imgs/background01.png') no-repeat -324px -52px;
    width: 21px;
    height: 24px;
}

.sprite_bookmark_outline {
    display: inline-block;
    background: url('../imgs/background01.png') no-repeat -237px -286px;
    width: 19px;
    height: 24px;
}
.sprite_bookmark_outline.on {
    background: url('../imgs/background01.png') no-repeat -159px -286px;
    width: 19px;
    height: 24px;
}

.sprite_small_heart_icon_outline {
    display: inline-block;
    background: url('../imgs/background01.png') no-repeat -323px -274px;
    width: 12px;
    height: 11px;
}

.sprite_camera_icon {
    display: inline-block;
    background: url('../imgs/background01.png') no-repeat -271px -104px;
    width: 24px;
    height: 22px;
}

.sprite_insta_big_logo {
    display: inline-block;
    background: url('../imgs/background02.png') no-repeat -98px -150px;
    width: 175px;
    height: 51px;
}

.sprite_plus_icon {
    display: inline-block;
    background: url('../imgs/background01.png') no-repeat -187px -202px;
    width: 23px;
    height: 23px;
}

.m_text {
    font-size: 14px;
    font-weight: bold;
}

.s_text {
    font-size: 12px;
}

body {
    background: #fafafa;
}

#header {
    width: 100%;
    position: absolute;
    left: 0;
    top: 0;
    z-index: 999;
    background: white;
    border-bottom: 1px solid rgba(0, 0, 0, 0.1);
}

#header.on {
    position: fixed;
}

#header .inner {
    width: 975px;
    height: 77px;
    margin: 0 auto;
    display: flex; /* 부모에게 flex를 줘야 자식들이 가로로 정렬 가능 */
    /* justify-content: center;  */
    /*  
        flex에서 이(justify-content) 속성을 제공합니다. 
        justify-content는 말 그대로 양 끝을 의미합니다.
        만약 justify-content를 center로 주게 되면 x축으로 가운데 정렬이 됩니다.
        하지만 저희는 center를 쓰지 않고 space-between을 사용할거에요.
        space-between같은 경우는 between은 사이를 의미하고
        space는 공간이죠? 그러니깐 space-between은 사이 사이 공간을 알맞게 분배시켜주겠다라는 뜻입니다.
    */
    justify-content: space-between;
    align-items: center; /* 이런 식으로 사용하면 세로도 중앙으로 정렬이 됩니다. */
    transition: all 1s; /* transition 요소가 어떻게 변화하는지에 대한 애니메이션 효과를 설정하는 속성입니다. */
    /* 여기서 "all"은 모든 속성에 대해 적용되는 것을 의미합니다. 
    예를 들어, 만약 요소의 너비, 높이, 배경색상 등이 모두 변경된다면, 
    이 애니메이션 효과는 이러한 모든 변화에 적용됩니다. 
    
    "1s"는 이 효과가 적용되는 시간을 나타냅니다. 
    이 경우에는 1초 동안 요소가 변화하는 동안 애니메이션 효과가 발생합니다. 
    
    즉, "transition: all 1s"를 사용하면 
    요소의 모든 속성이 변경될 때 1초 동안 부드럽게 애니메이션 효과가 발생하도록 설정할 수 있습니다. 
    이러한 속성은 웹사이트나 애플리케이션에서 시각적인 효과를 추가하는 데 유용하게 사용됩니다.*/
}

#header.on .inner {
    height: 52px;
}

#header .inner .logo > a {
    color:transparent;
}

#header .inner .logo .sprite_insta_icon {
    /* relative : 요소 자기 자신을 기준으로 배치 */
    position: relative; /* 기준을 잡아라~~ 자식 요소 때문에 넣어준 겁니다. */
    margin-right: 30px;
}

#header .inner .logo .sprite_insta_icon:after  {
    /* 
       :after 가상 요소는 선택한 요소의 내부(content) 뒤에 새로운 요소를 생성하며, 
       이를 사용하여 콘텐츠를 스타일링하는 것이 가능합니다.
    */
    content: ''; /* 무조건 적어야 하는 거임 */
    /* 막대기 만드는 작업이쥬? start */
    width: 1px;
    height: 28px;
    background: #000;
    /* 막대기 만드는 작업이쥬? end */
    position: absolute; /* 부모를 기준으로 위치를 잡는 친구인데 근데 그 기준을 잡는 조건이 뭐냐면 absolute, relative, fixed 3가지 중 하나라도 가지고 있어야 한다. 라는 조건입니다. */
    right: -15px;
    top: -4px;
}

#header .inner .logo div {
    vertical-align: middle;
}

#header .inner .logo div:nth-child(2) {
    transform: translateY(2px);
}

#header.on .inner .logo .sprite_insta_icon:after  {
    opacity: 0;
    transition: all .5s;
}

#header.on .inner .logo div:nth-child(2) {
    opacity: 0;
    transition: all .5s; 
}

#header .search_box {
    position: relative;
}

#search-field {
    width: 185px;
    height: 28px;
    background: #fafafa;
    border: 1px solid #dbdbdb;
    border-radius: 3px;
    padding: 3px 30px;
    color:#999;
    font-weight: 400; /* 글꼴의 굵기 */
    text-align: left; /* 글자 윈쪽 */
    font-size: 14px;
    outline: none;
}

/* 검색이라는 글자가 사라짐. */
#search-field::placeholder {
    font-size: 0;
}

#search-field:focus::placeholder {
    font-size: 14px;
}

#header .search_box .fake_field {
    position: absolute;
    /* 부모를 기준으로 위치를 정할거임. 부모님 search_box임. */

    /* 이 부분은 가운데로 정렬하는 공식임. */
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    pointer-events: none;
    /* pointer-events: none;은 CSS의 속성 중 하나로, 
    해당 요소에 대한 마우스 이벤트 처리를 비활성화(disabled)하는 데 사용됩니다.
    이 속성을 적용한 요소는 마우스 클릭, 
    마우스 오버 등의 이벤트가 발생해도 해당 이벤트가 요소에 적용되지 않고, 
    부모 요소나 형제 요소 등 다른 요소에 이벤트가 전달됩니다. 
    즉, 마치 해당 요소가 존재하지 않는 것처럼 작동합니다. */
}

/* #search-field:focus이 코드의 의미는 search-filed가 focus 되었을 때 이고
   ~(물결표)는 그 근처에 있는 친구중에 .fake_field라는 가장 옆에 있는 친구를 찾게 됩니다.
   어떤 말이냐면 여러 .fake_field가 있을 수 있죠? 그중에서 제일 가까운 .fake_filed를 찾는 다는 겁니다.
   그러면 자동적으로 search-filed밑에 있는 .fake-field가 선택 되겠죠??
   span:nth-child(1)는 span의 첫 번째를 의미함. 다른 말로 하면 돋보기 icon을 말하는 거임.
*/
#search-field:focus ~ .fake_field > span:nth-child(1){
    transform: translateX(-105px);
}

#search-field:focus ~ .fake_field > span:nth-child(2){
    display: none;
}

#header .right_icons {
    width: 132px;
    display: flex;
    justify-content: space-between;
    /* .right_icons의 넓이를 132px로 딱 정해주고 display를 flex로 놔서
    justify-content를 사용할 수 있게 해줄겁니다. 
    justify-content를 저희가 사용할 건데 space-between을 이용해서
    icon들 마다 사이 사이 공백을 넣어 줄겁니다. */
}

#main_container {
    padding-top: 130px;
    display: flex;
    justify-content: center;
}

#main_container .inner {
    width: 935px;
    /* height: 500px;
    background-color: red; */
    position: relative;
}

.contents_box {

}

.contents {
    max-width: 614px;
    /* height: 500px; */
    border: 1px solid rgba(0, 0, 0, 0.09);
    border-radius: 3px;
    margin-bottom: 60px;
    background-color: white;
}

.contents .top {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 10px 20px;
}

.contents .top .profile_img {
    width: 32px;
    height: 32px;
    border-radius: 50%;
    overflow: hidden;
    margin-right: 10px;
}

.contents .top .profile_img img {
    width: 100%; /* 부모 크기를 물려 받음. 32px */
}

.contents .top .user_container {
    display: flex;
}

.contents .sprite_more_icon {
    position: relative;
}

.contents .sprite_more_icon.on .toggle_box{
    display: block;
}

.contents .toggle_box {
    text-align: center;
    position: absolute;
    right: 0;
    top: 20px;
    border: 1px solid rgba(0, 0, 0, 0.09);
    border-radius: 3px;
    display: none;
}

.contents .toggle_box > li {
    padding: 5px 10px;
    background: #fff;
}
.contents .img_section {
    overflow: hidden;
}
.contents .toggle_box > li input {
    border: none;
    font-size: inherit;
}
.contents .img_section img {
    width: 100%;
}

.contents .bottom_icons {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 10px 20px;
}

.contents .bottom_icons .left_icons {
    display: flex;
}

.contents .bottom_icons .left_icons > div {
    margin-right: 10px;
    cursor: pointer;
}

.contents .bottom_icons .right_icons > div {
    cursor: pointer;
}

.sprite_heart_icon_outline.on {
    background: url('../imgs/background01.png') no-repeat -26px -261px;
}

.contents .likes {
    padding: 5px 20px;
    color: #262626;
}

.contents .comment_container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 5px 20px;
}

.contents .comment_container .comment {
    display: flex;
    flex-direction: column;
    font-size: 14px;
}

.contents .comment_container .comment .nick_name {
    margin-right: 10px;
}

.contents .timer {
    font-size: 10px;
    letter-spacing: 0.2px;
    color: #999;
    border-bottom: 1px solid rgba(0, 0, 0, 0.09);
    padding: 10px 20px;
}

.contents .comment_field {
    min-height: 56px;
    padding: 0px 20px;
    position: relative;

}

.contents .comment_field input {
    width:100%;
    height: 56px;
    border: none;
    outline: none;
    background: transparent;
}

.contents .comment_field input:focus ~ .upload_btn {
    pointer-events: initial;
    opacity: 1;
}

.contents .comment_field .upload_btn {
    color: #3897f0;
    position: absolute;
    right: 20px;
    top: 50%;
    transform: translateY(-50%);
    cursor: pointer;
    /* pointer-events: none; */
    opacity: 0.6;
}

.side_box {
    width: 293px;
    /* height: 300px; */
    /* background-color: red; */
    position: absolute;
    right: 0;
    top: 0;
}

.side_box.on {
    position: fixed; /* fixed는 기준점이 window다. 화면이다. */
    top: 80px;
}
.side_box .profile_thumb {
    width: 50px;
    height: 50px;
    border-radius: 50%;
    overflow: hidden;
    margin-right: 10px; 
}

.side_box .profile_thumb img {
    width: 100%;
    height: 100%;
}

.side_box .user_profile {
    display: flex;
    align-items: center;
    font-size: 14px;
    color: #262626;
}

.side_box .detail .id {
    margin-bottom: 5px;
}

.side_box .detail .ko_name {
    font-size: 12px;
    color: #999;
}

.side_box > article {
    border: 1px solid rgba(0, 0, 0, 0.09);
    border-radius: 3px;
    margin-bottom: 20px;
    width: 291px;
    font-size: 14px;
    color: #262626;
    font-weight: bold; /* font 종류 */
    background: white;
}

.side_box > article > header {
    display: flex;
    align-items: center; /* 가로 center 정렬. */
    justify-content: space-between;
    padding: 15px 20px;
    color: #999;
}

.side_box > article > header .more {
    font-size: 12px;
    color: #262626;
    cursor: pointer;
}

.thumb_user {
    display: flex;
    align-items: center;
    padding: 10px 20px;
}

.thumb_user .profile_thumb {
    width: 34px;
    height: 34px;
}

.thumb_user .time {
    font-size: 10px;
    letter-spacing: 0.2px; /* 글자 사이 간격. */
    color: #999;
}

.side_box .scroll_inner {
    height: 182px;
    overflow-x: hidden; /* x축으로 넘쳐 흐르면 안되기 때문에... */
    overflow-y: auto; 
    /* auto는 contents가 많아지면 스크롤이 생기고, 
    많아지지 않으면 안 생기고, 
    알아서 해주는 좋은 친구 입니다. */
    /* overflow: hidden auto; 이런 식으로 사용할 수 있지만... 인터넷 익스플로잇에서 문제가 되기 때문에... */
}

.hidden_menu {
    display: none;
    width: 600px;
    height: 100px;
    /* background: red; */
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    top:100px;
    overflow: hidden;
    border: 1px solid rgba(0, 0, 0, 0.09);
    border-radius: 3px;
}

.hidden_menu .scroll_inner {
    height: 100px;
    width: auto;
    overflow-x: auto; /* 항목이 많아지면 스크롤을 생성. */
    overflow-y: hidden;
    display: flex;
    align-items: center;
    padding: 0 10px;
}

.hidden_menu .scroll_inner .user {
    width: 80px;
    height: 80px;
    display: flex;
    flex-direction: column;
    align-items: center; 
    /* 원래는 align-items를 하면 세로로 중앙 정렬이 되지만 
       위에서 flex-direction을 column으로 설정을 해서 가로로 중앙정렬 됩니다.*/
    margin-right: 15px;  /*  */
    justify-content: space-between;
}

.hidden_menu .scroll_inner .user .id {
    font-size: 12px;
    color: #262626;
}

.hidden_menu .thumb_img {
    width: 56px;
    height: 56px;
    border-radius: 50%;
    overflow: hidden;
}

.hidden_menu .thumb_img img {
    width: 100%;
    height: 100%;
}

@media screen and (max-width:1000px) { /* 1000px 안으로 width가 줄어들었을 때 작동한다.*/
    #header .inner {
        width: 97.5%;
    }

    #main_container {
       padding-top: 220px; 
    }

    #main_container .inner {
        width: 93.5%;
    }

    .contents_box {
        display: flex; 
        flex-direction: column; /* flex를 사용하면 모두 가로배치가 되버리니깐 세로 배치로 바꿔주고~ */
        align-items: center; /* 1000px이하로 내려가면 가운데 정렬~~ */
    }

    .side_box {
        display: none;
    }

    .hidden_menu{
        display:block;

    }
}

@media screen and (max-width:650px){
    #header .search_box {
        display: none;
    }
}